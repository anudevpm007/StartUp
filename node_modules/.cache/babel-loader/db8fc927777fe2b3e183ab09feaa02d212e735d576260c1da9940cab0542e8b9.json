{"ast":null,"code":"import React,{Component}from'react';import Landing from'./Components/Landing/Landing';import Main_Blog from'./Components/Blog/Main_Blog/Main_Blog';import'./App.css';import{createBrowserRouter,RouterProvider}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";const router=createBrowserRouter([{path:\"/StartUp/\",element:/*#__PURE__*/_jsx(Landing,{}),children:[{path:\"StartUp/blogs/\",element:/*#__PURE__*/_jsx(Main_Blog,{})}]}]);class App extends Component{render(){return/*#__PURE__*/_jsx(RouterProvider,{router:router});}}export default App;","map":{"version":3,"names":["React","Component","Landing","Main_Blog","createBrowserRouter","RouterProvider","jsx","_jsx","router","path","element","children","App","render"],"sources":["C:/Users/ANUDEV PM/Desktop/COMPANY/website/StartUp/src/App.js"],"sourcesContent":["import React,{ Component } from 'react';\nimport Landing from './Components/Landing/Landing';\nimport Main_Blog from './Components/Blog/Main_Blog/Main_Blog';\nimport './App.css';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\n\n\nconst router = createBrowserRouter([\n  {\n    path: \"/StartUp/\",\n    element: <Landing/>,\n    children: [\n      {\n        path: \"StartUp/blogs/\",\n        element: <Main_Blog/>,\n      },\n    ]\n    \n  },\n  \n]);\n\n\nclass App extends Component{\n  render(){\n    return(\n      <RouterProvider router={router} />\n\n    );\n  }\n}\n\n\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,SAAS,KAAQ,OAAO,CACvC,MAAO,CAAAC,OAAO,KAAM,8BAA8B,CAClD,MAAO,CAAAC,SAAS,KAAM,uCAAuC,CAC7D,MAAO,WAAW,CAClB,OACEC,mBAAmB,CACnBC,cAAc,KACT,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG1B,KAAM,CAAAC,MAAM,CAAGJ,mBAAmB,CAAC,CACjC,CACEK,IAAI,CAAE,WAAW,CACjBC,OAAO,cAAEH,IAAA,CAACL,OAAO,GAAC,CAAC,CACnBS,QAAQ,CAAE,CACR,CACEF,IAAI,CAAE,gBAAgB,CACtBC,OAAO,cAAEH,IAAA,CAACJ,SAAS,GAAC,CACtB,CAAC,CAGL,CAAC,CAEF,CAAC,CAGF,KAAM,CAAAS,GAAG,QAAS,CAAAX,SAAS,CACzBY,MAAMA,CAAA,CAAE,CACN,mBACEN,IAAA,CAACF,cAAc,EAACG,MAAM,CAAEA,MAAO,CAAE,CAAC,CAGtC,CACF,CAIA,cAAe,CAAAI,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}